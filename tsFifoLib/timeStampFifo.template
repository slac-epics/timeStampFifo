
# timeStampFifo.template
#
# Required macros:
#	DEV		- Common prefix for all timeStampFifo records
#	PORT_PV	- PV for asyn port name of synchronized data device
#	EC_PV	- PV for fetching the data timestamp event code
#
# Optional macros:
#	GEN_PV	- PV which updates on each timing change which requires a resync
#				Defaults to $(DEV):Gen
#	TSDLY_PV- PV which can be read to fetch the expected delay in seconds
#				between the event code and the timestamp request
#				Defaults to $(DEV):ExpectedDelay
#	DLY		- Delay value for $(DEV):ExpectedDelay
#				Not used if you provide your own TSDLY_PV
#

#
# TimeStampFifo UpdateParams 
# This aSub PV handles updating the timeStampFifo driver w/ new parameters
#
# Inputs
#	A: Port PV name
#	B: Event Code PV name
#	C: Generation count PV name
#	D: PV name for expected delay in seconds from event code to acquisition
#	E: PV name for timestamp policy: 0 = LAST_EC, 1 = SYNCED, 2 = TOD, 3 = INTERNAL
#	F: TimeStampFifo FreeRun mode: 0 = Triggered, 1 = FreeRun
#       G: IntReq: NONE = 0, SET = 0, TWEAK_FWD = 0, TWEAK_REV = 0
#
# Outputs
#	A:	TimeStamp Synced Status: 0 = unlocked, 1 = locked
#	B:	DiffVsExp,    ms
#	C:	DiffVsExpMin, ms
#	D:	DiffVsExpMax, ms
#	E:	ActualDelayMin, ms
#	F:	ActualDelayMax, ms
#       G:      IntReqNew
#       H:      DiffVsInt     ms
#       I:      DiffVsIntMin  ms
#       J:      DiffVsIntMax  ms
#       K:      DiffVsIntAvg  ms
#       L:      Delta         s
#
record( aSub, "$(DEV):UpdateParams" )
{
  field( DESC, "Update TSS data" )
  field( SCAN, "Passive" )
  field( INAM, "TSFifo_Init" )
  field( SNAM, "TSFifo_Process" )
  field( FTA,  "STRING" ) field( INPA, "$(PORT_PV) CPP NMS" )
  field( FTB,  "LONG"   ) field( INPB, "$(DEV):EventCode_RBV CPP NMS" )
  field( FTC,  "LONG"   ) field( INPC, "$(GEN_PV=$(DEV):Gen) CPP NMS" )
  field( FTD,  "DOUBLE" ) field( INPD, "$(TSDLY_PV=$(DEV):ExpectedDelay) CPP NMS" )
  field( FTE,  "LONG"   ) field( INPE, "$(DEV):TsPolicy CPP NMS" )
  field( FTF,  "LONG"   ) field( INPF, "$(DEV):TsFreeRun CPP NMS" )
  field( FTG,  "LONG"   ) field( INPG, "$(DEV):IntReq NPP NMS" )

  field( OUTA, "$(DEV):SyncStatus PP MS" )
  field( FTVA, "LONG"   )
  field( OUTB, "$(DEV):DiffVsExp PP MS" )
  field( FTVB, "DOUBLE"   )
  field( OUTC, "$(DEV):DiffVsExpMin PP MS" )
  field( FTVC, "DOUBLE"   )
  field( OUTD, "$(DEV):DiffVsExpMax PP MS" )
  field( FTVD, "DOUBLE"   )
  field( OUTE, "$(DEV):ActualDelayMin PP MS" )
  field( FTVE, "DOUBLE"   )
  field( OUTF, "$(DEV):ActualDelayMax PP MS" )
  field( FTVF, "DOUBLE"   )
  field( OUTG, "$(DEV):IntReqNew PP NMS" )
  field( FTVG,  "LONG"   )
  field( OUTH, "$(DEV):DiffVsInt PP MS" )
  field( FTVH, "DOUBLE"   )
  field( OUTI, "$(DEV):DiffVsIntMin PP MS" )
  field( FTVI, "DOUBLE"   )
  field( OUTJ, "$(DEV):DiffVsIntMax PP MS" )
  field( FTVJ, "DOUBLE"   )
  field( OUTK, "$(DEV):DiffVsIntAvg PP MS" )
  field( FTVK, "DOUBLE"   )
  field( OUTL, "$(DEV):DELTA PP MS" )
  field( FTVL, "DOUBLE"   )
  info(  autosaveFields, "DESC" )
}

record( longin, "$(DEV):EventCode_RBV" )
{
  field( DESC, "Event code readback" )
  field( INP,  "$(EC_PV) CPP MS" )
  info(  autosaveFields, "DESC" )
}


record( bo, "$(DEV):SyncStatus" )
{
  field( DESC, "TSS sync status" )
  field( ZNAM, "Unlocked" )
  field( ONAM, "Locked" )
  field( ZSV,  "MAJOR" )
  field( OSV,  "NO_ALARM" )
  info(  autosaveFields, "DESC ZNAM ONAM ZSV OSV" )
}


# Default timestamp change generation PV
# Can be used if your synchronous data device doesn't
# require resync on timing changes.
record( longout, "$(DEV):Gen" )
{
  field( DESC, "TSS generation" )
  field( DOL,  "0" )
  field( PINI, "YES" )
  info(  autosaveFields, "DESC" )
}


# Expected delay in seconds between the event code and
# the timestamp request
record( ao, "$(DEV):ExpectedDelay" )
{
  field( DESC, "TSS expected delay" )
  field( DOL,  "$(DLY=0.007)" )
  field( PREC, "3" )
  field( EGU,  "sec" )
  field( LOPR, "0" )
  field( LOLO, "0" )
  field( LLSV, "MAJOR" )
  field( PINI, "YES" )
  info(  autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC VAL" )
}

# Diff versus expected delay in ms
record( ao, "$(DEV):DiffVsExp" )
{
  field( PREC, "3" )
  field( EGU,  "ms" )
  field( LOW,  "-2" )
  field( LSV,  "MINOR" )
  field( HIGH, "4" )
  field( HSV,  "MINOR" )
  info(  autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

# Minimum Diff versus expected delay in ms
# Reset when event code, delay, or exposure is changed.
record( ao, "$(DEV):DiffVsExpMin" )
{
  field( DESC, "MinDiff vs expected delay" )
  field( PREC, "3" )
  field( EGU,  "ms" )
  field( LOW,  "-2" )
  field( LSV,  "MINOR" )
  field( HIGH, "4" )
  field( HSV,  "MINOR" )
  info(  autosaveFields, "LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

# Max Diff versus expected delay in ms
# Reset when event code, delay, or exposure is changed.
record( ao, "$(DEV):DiffVsExpMax" )
{
  field( DESC, "MaxDiff vs expected delay" )
  field( PREC, "3" )
  field( EGU,  "ms" )
  field( LOW,  "-2" )
  field( LSV,  "MINOR" )
  field( HIGH, "4" )
  field( HSV,  "MINOR" )
  info(  autosaveFields, "LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

# Minimum actual measured delay in sec
# Reset when event code, delay, or exposure is changed.
record( ao, "$(DEV):ActualDelayMin" )
{
  field( DESC, "Min actual measured delay" )
  field( PREC, "3" )
  field( EGU,  "sec" )
  field( LOW,  "-2" )
  field( LSV,  "MINOR" )
  field( HIGH, "4" )
  field( HSV,  "MINOR" )
  info(  autosaveFields, "LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

# Maximum actual measured delay in sec
# Reset when event code, delay, or exposure is changed.
record( ao, "$(DEV):ActualDelayMax" )
{
  field( DESC, "Max actual measured delay" )
  field( PREC, "3" )
  field( EGU,  "sec" )
  field( LOW,  "-2" )
  field( LSV,  "MINOR" )
  field( HIGH, "4" )
  field( HSV,  "MINOR" )
  info(  autosaveFields, "LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

record( mbbo, "$(DEV):TsPolicy" )
{
  field( DESC, "TS policy" )
  field( DOL,  "$(POLICY=0)" )
  field( ZRVL, "0" ) field( ZRST, "LAST_EC" )
  field( ONVL, "1" ) field( ONST, "SYNCED" )
  field( TWVL, "2" ) field( TWST, "TOD" )
  field( THVL, "3" ) field( THST, "INTERNAL" )
  field( PINI, "YES" )
  info(  autosaveFields, "DESC VAL" )
}

record( bo, "$(DEV):TsFreeRun" )
{
  field( DESC, "TSS FreeRun" )
  field( ZNAM, "Triggered" )
  field( ONAM, "FreeRun" )
  info(  autosaveFields, "DESC ZNAM ONAM ZSV OSV" )
}

record( ao, "$(DEV):DiffVsInt" )
{
  field( PREC, "3" )
  field( EGU,  "ms" )
  info(  autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

record( ao, "$(DEV):DiffVsIntMin" )
{
  field( PREC, "3" )
  field( EGU,  "ms" )
  info(  autosaveFields, "LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

record( ao, "$(DEV):DiffVsIntMax" )
{
  field( PREC, "3" )
  field( EGU,  "ms" )
  info(  autosaveFields, "LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

record( ao, "$(DEV):DiffVsIntAvg" )
{
  field( PREC, "3" )
  field( EGU,  "ms" )
  info(  autosaveFields, "LOLO LOW HIGH HIHI LLSV LSV HSV HHSV PREC" )
}

record( mbbo, "$(DEV):IntReq" )
{
  field( DESC, "Internal Timestamping Request" )
  field( DOL,  "0" )
  field( ZRVL, "0" ) field( ZRST, "NONE" )
  field( ONVL, "1" ) field( ONST, "SET" )
  field( TWVL, "2" ) field( TWST, "TWEAK_FWD" )
  field( THVL, "3" ) field( THST, "TWEAK_REV" )
  field( PINI, "YES" )
  field( FLNK, "$(DEV):UpdateParams" )
  info(  autosaveFields, "DESC VAL" )
}

record( longout, "$(DEV):IntReqNew" )
{
  field(FLNK, "$(DEV):IntReqUpdate")
}

record( calcout, "$(DEV):IntReqUpdate" )
{
  field(INPA, "$(DEV):IntReq NPP NMS")
  field(INPB, "$(DEV):IntReqNew NPP NMS")
  field(CALC, "A!=B")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "B")
  field(OUT,  "$(DEV):IntReq PP")
}

record(ao, "$(DEV):DELTA")
{
  field(FLNK, "$(DEV):INTERNAL_SYNC")
}

record (calc, "$(DEV):INTERNAL_SYNC")
{
  field(INPA, "$(DEV):DELTA NMS NPP")
  field(CALC, "ABS(A)>0.001")
}
